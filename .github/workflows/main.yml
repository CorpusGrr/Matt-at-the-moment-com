# Deploy to IPFS
name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Pin the built site to ipfs-cluster, output the cid as `steps.ipfs.outputs.cid`
      # see: https://github.com/ipfs-shipyard/ipfs-github-action
      - name: Deploy to IPFS
        uses: aquiladev/ipfs-action@v0.1.5
        id: ipfs
        with:
          path: public
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}
          pinataPinName: MattAtTheMoment.com-GitHub
          
      - run: echo /ipfs/${{ steps.ipfs.outputs.hash }}
      - run: echo ${{ github.ref }}
          
      - name: Update DNSLink
        uses: textileio/cloudflare-update-dnslink@master
        id: dnslink
        env:
          RECORD_DOMAIN: 'mattatthemoment.com'
          RECORD_NAME: _dnslink
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONEID }}
        with:
          cid: ${{ steps.ipfs.outputs.hash }}
      
      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: release_${{ github.sha }}
      #    release_name: Release ${{ github.sha }}
      #    body: |
      #      Deployed to IPFS
      #      - HASH: ${{ steps.ipfs.outputs.hash }}
      #      
      #      Links
      #      - IPFSio: http://ipfs.io/ipfs/${{ steps.ipfs.outputs.hash }}
      #      - Pinata: https://gateway.pinata.cloud/ipfs/${{ steps.ipfs.outputs.hash }}
      #    draft: false
      #    prerelease: false
      
